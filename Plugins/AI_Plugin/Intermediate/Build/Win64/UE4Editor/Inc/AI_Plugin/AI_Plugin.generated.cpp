// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/AI_PluginPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "AI_Plugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1AI_Plugin() {}
	void UActorAudioOcclusionComponent::StaticRegisterNativesUActorAudioOcclusionComponent()
	{
	}
	IMPLEMENT_CLASS(UActorAudioOcclusionComponent, 1557855819);
static class UEnum* EBotBehaviorType_StaticEnum()
{
	extern AI_PLUGIN_API class UPackage* Z_Construct_UPackage__Script_AI_Plugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AI_PLUGIN_API class UEnum* Z_Construct_UEnum_AI_Plugin_EBotBehaviorType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AI_Plugin_EBotBehaviorType, Z_Construct_UPackage__Script_AI_Plugin(), TEXT("EBotBehaviorType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBotBehaviorType(EBotBehaviorType_StaticEnum, TEXT("/Script/AI_Plugin"), TEXT("EBotBehaviorType"), false, nullptr, nullptr);
	void AMyTargetPoint::StaticRegisterNativesAMyTargetPoint()
	{
	}
	IMPLEMENT_CLASS(AMyTargetPoint, 3066406667);
	void AAIFollwingPoint::StaticRegisterNativesAAIFollwingPoint()
	{
	}
	IMPLEMENT_CLASS(AAIFollwingPoint, 2191055910);
	void ABaseCharacter::StaticRegisterNativesABaseCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(ABaseCharacter::StaticClass(), "MakePawnNoise",(Native)&ABaseCharacter::execMakePawnNoise);
	}
	IMPLEMENT_CLASS(ABaseCharacter, 2566995785);
	void AAICharacter::StaticRegisterNativesAAICharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAICharacter::StaticClass(), "OnHearNoise",(Native)&AAICharacter::execOnHearNoise);
		FNativeFunctionRegistrar::RegisterFunction(AAICharacter::StaticClass(), "OnSeePlayer",(Native)&AAICharacter::execOnSeePlayer);
	}
	IMPLEMENT_CLASS(AAICharacter, 315532665);
	void AAICharacterController::StaticRegisterNativesAAICharacterController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAICharacterController::StaticClass(), "SetCurrentWayPoint",(Native)&AAICharacterController::execSetCurrentWayPoint);
	}
	IMPLEMENT_CLASS(AAICharacterController, 4275920634);
	void UBTFollwingBoss::StaticRegisterNativesUBTFollwingBoss()
	{
	}
	IMPLEMENT_CLASS(UBTFollwingBoss, 2322684339);
	void UBTTargetPointSelection::StaticRegisterNativesUBTTargetPointSelection()
	{
	}
	IMPLEMENT_CLASS(UBTTargetPointSelection, 1408550424);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ATargetPoint();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnSensingComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTaskNode();

	AI_PLUGIN_API class UClass* Z_Construct_UClass_UActorAudioOcclusionComponent_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_UActorAudioOcclusionComponent();
	AI_PLUGIN_API class UEnum* Z_Construct_UEnum_AI_Plugin_EBotBehaviorType();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AMyTargetPoint_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AMyTargetPoint();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAIFollwingPoint_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAIFollwingPoint();
	AI_PLUGIN_API class UFunction* Z_Construct_UFunction_ABaseCharacter_MakePawnNoise();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_ABaseCharacter_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_ABaseCharacter();
	AI_PLUGIN_API class UFunction* Z_Construct_UFunction_AAICharacter_OnHearNoise();
	AI_PLUGIN_API class UFunction* Z_Construct_UFunction_AAICharacter_OnSeePlayer();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAICharacter_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAICharacter();
	AI_PLUGIN_API class UFunction* Z_Construct_UFunction_AAICharacterController_SetCurrentWayPoint();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAICharacterController_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_AAICharacterController();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_UBTFollwingBoss_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_UBTFollwingBoss();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_UBTTargetPointSelection_NoRegister();
	AI_PLUGIN_API class UClass* Z_Construct_UClass_UBTTargetPointSelection();
	AI_PLUGIN_API class UPackage* Z_Construct_UPackage__Script_AI_Plugin();
	UClass* Z_Construct_UClass_UActorAudioOcclusionComponent_NoRegister()
	{
		return UActorAudioOcclusionComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorAudioOcclusionComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = UActorAudioOcclusionComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldOccludeSound, UActorAudioOcclusionComponent, bool);
				UProperty* NewProp_bShouldOccludeSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bShouldOccludeSound"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldOccludeSound, UActorAudioOcclusionComponent), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bShouldOccludeSound, UActorAudioOcclusionComponent), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ActorAudioOcclusionComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/ActorAudioOcclusionComponent.h"));
				MetaData->SetValue(NewProp_bShouldOccludeSound, TEXT("Category"), TEXT("ActorAudioOcclusionComponent"));
				MetaData->SetValue(NewProp_bShouldOccludeSound, TEXT("ModuleRelativePath"), TEXT("Public/ActorAudioOcclusionComponent.h"));
				MetaData->SetValue(NewProp_bShouldOccludeSound, TEXT("ToolTip"), TEXT("Should this actor block sound?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorAudioOcclusionComponent(Z_Construct_UClass_UActorAudioOcclusionComponent, &UActorAudioOcclusionComponent::StaticClass, TEXT("UActorAudioOcclusionComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UActorAudioOcclusionComponent);
	UEnum* Z_Construct_UEnum_AI_Plugin_EBotBehaviorType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_AI_Plugin();
		extern uint32 Get_Z_Construct_UEnum_AI_Plugin_EBotBehaviorType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EBotBehaviorType"), 0, Get_Z_Construct_UEnum_AI_Plugin_EBotBehaviorType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBotBehaviorType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::Neutral")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::Suspicious")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::Agression")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::Flee")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::Helping")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBotBehaviorType::EBotBehaviorType_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EBotBehaviorType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Agression.ToolTip"), TEXT("Running towards the player and attacking"));
			MetaData->SetValue(ReturnEnum, TEXT("Flee.ToolTip"), TEXT("Flee."));
			MetaData->SetValue(ReturnEnum, TEXT("Helping.ToolTip"), TEXT("Helping an AI"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/TypeClass.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Neutral.ToolTip"), TEXT("passive patrolling mode"));
			MetaData->SetValue(ReturnEnum, TEXT("Suspicious.ToolTip"), TEXT("hearing or seeing someone."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AI_Plugin_EBotBehaviorType_CRC() { return 4247783406U; }
	UClass* Z_Construct_UClass_AMyTargetPoint_NoRegister()
	{
		return AMyTargetPoint::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyTargetPoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ATargetPoint();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = AMyTargetPoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyTargetPoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyTargetPoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyTargetPoint(Z_Construct_UClass_AMyTargetPoint, &AMyTargetPoint::StaticClass, TEXT("AMyTargetPoint"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyTargetPoint);
	UClass* Z_Construct_UClass_AAIFollwingPoint_NoRegister()
	{
		return AAIFollwingPoint::StaticClass();
	}
	UClass* Z_Construct_UClass_AAIFollwingPoint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = AAIFollwingPoint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AIFollwingPoint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AIFollwingPoint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAIFollwingPoint(Z_Construct_UClass_AAIFollwingPoint, &AAIFollwingPoint::StaticClass, TEXT("AAIFollwingPoint"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAIFollwingPoint);
	UFunction* Z_Construct_UFunction_ABaseCharacter_MakePawnNoise()
	{
		struct BaseCharacter_eventMakePawnNoise_Parms
		{
			float Loudness;
		};
		UObject* Outer=Z_Construct_UClass_ABaseCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakePawnNoise"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BaseCharacter_eventMakePawnNoise_Parms));
			UProperty* NewProp_Loudness = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Loudness"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Loudness, BaseCharacter_eventMakePawnNoise_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("MakeNoise hook to trigger AI noise emitting (Loudness between 0.0-1.0)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ABaseCharacter_NoRegister()
	{
		return ABaseCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_ABaseCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = ABaseCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ABaseCharacter_MakePawnNoise());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ValToMakePawnUnDetected = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ValToMakePawnUnDetected"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ValToMakePawnUnDetected, ABaseCharacter), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsAlive, ABaseCharacter, bool);
				UProperty* NewProp_bIsAlive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsAlive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsAlive, ABaseCharacter), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bIsAlive, ABaseCharacter), sizeof(bool), true);
				UProperty* NewProp_Stamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Stamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Stamina, ABaseCharacter), 0x0010000000010001);
				UProperty* NewProp_Health = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Health"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Health, ABaseCharacter), 0x0010000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABaseCharacter_MakePawnNoise(), "MakePawnNoise"); // 3616896967
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BaseCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
				MetaData->SetValue(NewProp_ValToMakePawnUnDetected, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_ValToMakePawnUnDetected, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
				MetaData->SetValue(NewProp_ValToMakePawnUnDetected, TEXT("ToolTip"), TEXT("This value is used in Enemy to detect the player 1.0 will take longer and 0.0 will be immediate detection formular\n       PawnSeenValue * DetectionMaxTime"));
				MetaData->SetValue(NewProp_bIsAlive, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_bIsAlive, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
				MetaData->SetValue(NewProp_Stamina, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_Stamina, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
				MetaData->SetValue(NewProp_Health, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_Health, TEXT("ModuleRelativePath"), TEXT("Public/BaseCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ABaseCharacter(Z_Construct_UClass_ABaseCharacter, &ABaseCharacter::StaticClass, TEXT("ABaseCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ABaseCharacter);
	UFunction* Z_Construct_UFunction_AAICharacter_OnHearNoise()
	{
		struct AICharacter_eventOnHearNoise_Parms
		{
			APawn* PawnInstigator;
			FVector Location;
			float Volume;
		};
		UObject* Outer=Z_Construct_UClass_AAICharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnHearNoise"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00C20401, 65535, sizeof(AICharacter_eventOnHearNoise_Parms));
			UProperty* NewProp_Volume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Volume"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Volume, AICharacter_eventOnHearNoise_Parms), 0x0010000000000080);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, AICharacter_eventOnHearNoise_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_PawnInstigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PawnInstigator"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PawnInstigator, AICharacter_eventOnHearNoise_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
			MetaData->SetValue(NewProp_Location, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAICharacter_OnSeePlayer()
	{
		struct AICharacter_eventOnSeePlayer_Parms
		{
			APawn* Pawn;
		};
		UObject* Outer=Z_Construct_UClass_AAICharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSeePlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(AICharacter_eventOnSeePlayer_Parms));
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Pawn, AICharacter_eventOnSeePlayer_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAICharacter_NoRegister()
	{
		return AAICharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AAICharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ABaseCharacter();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = AAICharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AAICharacter_OnHearNoise());
				OuterClass->LinkChild(Z_Construct_UFunction_AAICharacter_OnSeePlayer());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AIFollowPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIFollowPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AIFollowPoint, AAICharacter), 0x0010000000000005, Z_Construct_UClass_AAIFollwingPoint_NoRegister());
				UProperty* NewProp_AIFollwingPoints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIFollwingPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AIFollwingPoints, AAICharacter), 0x0010000000000005);
				UProperty* NewProp_AIFollwingPoints_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AIFollwingPoints, TEXT("AIFollwingPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AAIFollwingPoint_NoRegister());
				UProperty* NewProp_SenseTimeOut = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SenseTimeOut"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SenseTimeOut, AAICharacter), 0x0010000000010001);
				UProperty* NewProp_DetectionMaxTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DetectionMaxTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DetectionMaxTime, AAICharacter), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DebugDrawEnabled, AAICharacter, bool);
				UProperty* NewProp_DebugDrawEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DebugDrawEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DebugDrawEnabled, AAICharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(DebugDrawEnabled, AAICharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(YellForHelpOnContact, AAICharacter, bool);
				UProperty* NewProp_YellForHelpOnContact = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("YellForHelpOnContact"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(YellForHelpOnContact, AAICharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(YellForHelpOnContact, AAICharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanSee, AAICharacter, bool);
				UProperty* NewProp_bCanSee = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanSee"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanSee, AAICharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanSee, AAICharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanHear, AAICharacter, bool);
				UProperty* NewProp_bCanHear = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanHear"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanHear, AAICharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanHear, AAICharacter), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bisLooping, AAICharacter, bool);
				UProperty* NewProp_bisLooping = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bisLooping"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bisLooping, AAICharacter), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bisLooping, AAICharacter), sizeof(bool), true);
				UProperty* NewProp_AIState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(AIState, AAICharacter), 0x0010000000000005, Z_Construct_UEnum_AI_Plugin_EBotBehaviorType());
				UProperty* NewProp_PatrolTargetPoints = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PatrolTargetPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(PatrolTargetPoints, AAICharacter), 0x0010000000000005);
				UProperty* NewProp_PatrolTargetPoints_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PatrolTargetPoints, TEXT("PatrolTargetPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AMyTargetPoint_NoRegister());
				UProperty* NewProp_PawnSensingComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PawnSensingComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PawnSensingComp, AAICharacter), 0x00100000000a0009, Z_Construct_UClass_UPawnSensingComponent_NoRegister());
				UProperty* NewProp_AiMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AiMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AiMesh, AAICharacter), 0x0010000000080009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
				UProperty* NewProp_BehaviorTree = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviorTree"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BehaviorTree, AAICharacter), 0x0010000000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAICharacter_OnHearNoise(), "OnHearNoise"); // 1130803556
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAICharacter_OnSeePlayer(), "OnSeePlayer"); // 3798450267
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AICharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_AIFollowPoint, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_AIFollowPoint, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_AIFollwingPoints, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_AIFollwingPoints, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_AIFollwingPoints, TEXT("ToolTip"), TEXT("For follwing AI"));
				MetaData->SetValue(NewProp_SenseTimeOut, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_SenseTimeOut, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_SenseTimeOut, TEXT("ToolTip"), TEXT("Time-out value to clear the sensed position of the player.\n      Should be higher than Sense interval in the PawnSense component not never miss sense ticks.\n      Once detectected duration of this much will be following the player"));
				MetaData->SetValue(NewProp_DetectionMaxTime, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_DetectionMaxTime, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_DetectionMaxTime, TEXT("ToolTip"), TEXT("Maximum Timetaken to detect player This decides how fast enemy is Seen"));
				MetaData->SetValue(NewProp_DebugDrawEnabled, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_DebugDrawEnabled, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_YellForHelpOnContact, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_YellForHelpOnContact, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_YellForHelpOnContact, TEXT("ToolTip"), TEXT("Can The pawn See?"));
				MetaData->SetValue(NewProp_bCanSee, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bCanSee, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_bCanSee, TEXT("ToolTip"), TEXT("Can The pawn See?"));
				MetaData->SetValue(NewProp_bCanHear, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bCanHear, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_bCanHear, TEXT("ToolTip"), TEXT("Can The pawn hear?"));
				MetaData->SetValue(NewProp_bisLooping, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_bisLooping, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_bisLooping, TEXT("ToolTip"), TEXT("Can The pawn hear?"));
				MetaData->SetValue(NewProp_AIState, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_AIState, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_PatrolTargetPoints, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PatrolTargetPoints, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_PawnSensingComp, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_PawnSensingComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PawnSensingComp, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_AiMesh, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_AiMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_AiMesh, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
				MetaData->SetValue(NewProp_BehaviorTree, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_BehaviorTree, TEXT("ModuleRelativePath"), TEXT("Public/AICharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAICharacter(Z_Construct_UClass_AAICharacter, &AAICharacter::StaticClass, TEXT("AAICharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAICharacter);
	UFunction* Z_Construct_UFunction_AAICharacterController_SetCurrentWayPoint()
	{
		struct AICharacterController_eventSetCurrentWayPoint_Parms
		{
			AMyTargetPoint* NewWaypoint;
		};
		UObject* Outer=Z_Construct_UClass_AAICharacterController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetCurrentWayPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AICharacterController_eventSetCurrentWayPoint_Parms));
			UProperty* NewProp_NewWaypoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewWaypoint"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NewWaypoint, AICharacterController_eventSetCurrentWayPoint_Parms), 0x0010000000000080, Z_Construct_UClass_AMyTargetPoint_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BlackBoard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAICharacterController_NoRegister()
	{
		return AAICharacterController::StaticClass();
	}
	UClass* Z_Construct_UClass_AAICharacterController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = AAICharacterController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;

				OuterClass->LinkChild(Z_Construct_UFunction_AAICharacterController_SetCurrentWayPoint());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LeaderFollwiongLocationKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LeaderFollwiongLocationKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(LeaderFollwiongLocationKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_IsArrayGoingUpKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsArrayGoingUpKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(IsArrayGoingUpKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_AIStateKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AIStateKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(AIStateKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_CurrentWaypointKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentWaypointKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(CurrentWaypointKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_TargetEnemyKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetEnemyKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(TargetEnemyKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_NextWaypointKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NextWaypointKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(NextWaypointKeyName, AAICharacterController), 0x0040000000010001);
				UProperty* NewProp_LeaderToHelpKeyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LeaderToHelpKeyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(LeaderToHelpKeyName, AAICharacterController), 0x0040000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAICharacterController_SetCurrentWayPoint(), "SetCurrentWayPoint"); // 39906270
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AICharacterController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_LeaderFollwiongLocationKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_LeaderFollwiongLocationKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_IsArrayGoingUpKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_IsArrayGoingUpKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_AIStateKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_AIStateKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_CurrentWaypointKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_CurrentWaypointKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_TargetEnemyKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_TargetEnemyKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_NextWaypointKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_NextWaypointKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_LeaderToHelpKeyName, TEXT("Category"), TEXT("AI"));
				MetaData->SetValue(NewProp_LeaderToHelpKeyName, TEXT("ModuleRelativePath"), TEXT("Public/AICharacterController.h"));
				MetaData->SetValue(NewProp_LeaderToHelpKeyName, TEXT("ToolTip"), TEXT("Blackboard Keys"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAICharacterController(Z_Construct_UClass_AAICharacterController, &AAICharacterController::StaticClass, TEXT("AAICharacterController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAICharacterController);
	UClass* Z_Construct_UClass_UBTFollwingBoss_NoRegister()
	{
		return UBTFollwingBoss::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTFollwingBoss()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = UBTFollwingBoss::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BTFollwingBoss.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BTFollwingBoss.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTFollwingBoss(Z_Construct_UClass_UBTFollwingBoss, &UBTFollwingBoss::StaticClass, TEXT("UBTFollwingBoss"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTFollwingBoss);
	UClass* Z_Construct_UClass_UBTTargetPointSelection_NoRegister()
	{
		return UBTTargetPointSelection::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTargetPointSelection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage__Script_AI_Plugin();
			OuterClass = UBTTargetPointSelection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BTTargetPointSelection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BTTargetPointSelection.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTargetPointSelection(Z_Construct_UClass_UBTTargetPointSelection, &UBTTargetPointSelection::StaticClass, TEXT("UBTTargetPointSelection"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBTTargetPointSelection);
	UPackage* Z_Construct_UPackage__Script_AI_Plugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AI_Plugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x7C1651D1;
			Guid.B = 0x615561AB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
